# services:
#   mongo:
#     image: mongo
#     ports:
#       - 3456:27017
#     environment:
#       MONGO_INITDB_ROOT_USERNAME: root
#       MONGO_INITDB_ROOT_PASSWORD: example
#       MONGO_INITDB_DATABASE: the_database
#     volumes: 
#       - ./mongo/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js
#       - ./mongo_data:/data/db
  
#   redis:
#     image: redis
#     ports:
#       - 6379:6379  # Default Redis port
#     command: ['redis-server', '--appendonly', 'yes'] # Enable data persistence
#     volumes:
#       - redis_data:/data  # Store Redis data persistently

# volumes:
#   mongo_data:
#   redis_data:

services:
  app:
    build:
      context: .  # Use the current directory as build context
      dockerfile: dev.Dockerfile  # Use the dev Dockerfile for building the image
    image: todo-backend-dev  # Image name for the development container
    volumes:
      - .:/usr/src/app  # Mount the local project directory inside the container
      - /usr/src/app/node_modules  # Prevent overwriting node_modules with the host system - Prevent node_modules conflicts (Mac M1/M2 fix)
    ports:
      - 3000:3000  # Map container port 3000 to host port 3000
    environment:
      - REDIS_URL=redis://redis:6379
      - MONGO_URL=mongodb://the_username:the_password@mongo:27017/the_database
    depends_on:
      - mongo
      - redis
    container_name: todo-backend-dev

  mongo:
    image: mongo
    ports:
      - 3456:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
      MONGO_INITDB_DATABASE: the_database
    volumes:
      - ./mongo/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js
      - mongo_data:/data/db

  redis:
    image: redis
    ports:
      - 6379:6379
    command: ['redis-server', '--appendonly', 'yes']
    volumes:
      - redis_data:/data

volumes:
  mongo_data:
  redis_data: